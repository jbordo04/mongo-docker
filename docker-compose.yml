# Use root/example as user/password credentials
version: "3.8"

services:
  node-app:
    build: .
    # image: node-app
    image: hola:latest
    environment:
      - MONGODB_DOCKER=mongodb://mongodb:27017/node-boilerplate
    ports:
      - "8085:8085"
    depends_on:
      - mongodb
    volumes:
      - .:/src
    networks:
      - node-network

  mongodb:
    image: mongo:6-jammy
    ports:
      - "27017:27017"
    volumes:
      - dbdata6:/data/db
    networks:
      - node-network

volumes:
  dbdata6:

networks:
  node-network:
    driver: bridge
# services:
# ts-node-docker:
#   build:
#     context: .
#     dockerfile: Dockerfile
#   # image: node:20-alpine
#   # image: im-nodejs:latest
#   # command: sh -c "yarn install && yarn run dev"
#   env_file:
#     - .env

#   #no creamos variables aqu√≠, las exportamos, queda comentado
#   # environment:
#   #   MONGODB_URI: uri
#   #   MONGODB_USER: user
#   #   MONGODB_PASSWORD: password
#   #   MONGODB_CLUSTER_NAME: url_cluster

#   working_dir: /app
#   volumes:
#     - ./:/app
#   command: npm run dev
# mongo:
#   image: mongo:latest
#   restart: always
#   container_name: debbugg-mongo
#   ports:
#     - 27047:27047
#   environment:
#     MONGO_INITDB_ROOT_USERNAME: root
#     MONGO_INITDB_ROOT_PASSWORD: example

# mongo-express:
#   image: mongo-express:latest
#   restart: always
#   ports:
#     - 8081:8081
#   environment:
#     ME_CONFIG_MONGODB_ADMINUSERNAME: root
#     ME_CONFIG_MONGODB_ADMINPASSWORD: example
#     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
# volumes:
#   db_mongo:
